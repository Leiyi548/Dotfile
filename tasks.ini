# vim: set fenc=utf-8 ft=dosini:
# define a new task named "file-build"
#[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
#command=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"

# working directory, can change to $(VIM_ROOT) for project root
#cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
#output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
#errorformat=%f:%l:%m

# save file before execute
#save=1
[file-run]
command="$(VIM_FILEPATH)"
command:c=:FloatermNew --autoclose=0 gcc-11 % -o %< && ./%<
#command:cpp=:FloatermNew --autoclose=0 g++ -g -std=c++11 % -o %< && ./%<
#command:cpp=g++ -std=c++17 -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:cpp=g++  -std=c++17 -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:go=go run "$(VIM_FILENAME)"
command:python=python3 "$(VIM_FILENAME)"
command:java=javac "$(VIM_FILEPATH)" && java "$(VIM_FILENOEXT)" && rm "$(VIM_PATHNOEXT).class"
command:javascript=node "$(VIM_FILENAME)"
command:sh=bash "$(VIM_FILENAME)"
#command:python=:FloatermNew --auoclose=0 python3 "$VIM_FILENAME"
command:lua=lua "$VIM_FILENAME"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:markdown=:MarkdownPreview
command:vim=:source%
output=terminal
pos=terminal
cwd=$(VIM_FILEDIR)
focus=1
notify=echo
save=2

#runcode by floaterm
[file-run-floaterm]
command="$(VIM_FILEPATH)"
command:c=:FloatermNew --autoclose=0 gcc-11 % -o %< && ./%<
command:cpp=:FloatermNew --autoclose=0 g++  -std=c++17 -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:go=":FloatermNew --autoclose=0 go run $(VIM_FILENAME)"
command:python=:FloatermNew --autoclose=0 python3 "$(VIM_FILENAME)"
command:java=:FloatermNew --autoclose=0 javac "$(VIM_FILEPATH)" && java "$(VIM_FILENOEXT)" && rm "$(VIM_PATHNOEXT).class"
command:javascript=:FloatermNew --autoclose=0 node "$(VIM_FILENAME)"
command:sh=:FloatermNew --autoclose=0 bash "$(VIM_FILENAME)"
command:lua=:FloatermNew --autoclose=0 lua "$VIM_FILENAME"
command:perl=:FloatermNew --autoclose=0 perl "$(VIM_FILENAME)"
command:ruby=:FloatermNew --autoclose=0 ruby "$(VIM_FILENAME)"
command:markdown=:MarkdownPreview
command:vim=:source%
output=terminal
pos=terminal
cwd=$(VIM_FILEDIR)
focus=1
notify=echo
save=2


