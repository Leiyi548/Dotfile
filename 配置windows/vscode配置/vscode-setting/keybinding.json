[
  // space 呼出 whichkey
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  /*
  ===
  === 文件树操作
  ===
  */
  // 打开左侧文件树光标并聚焦到文件树
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer"
  },
  // 光标定位到 outline (类似于 Intellij IDEA 使用 alt + 7 光标定位到大纲窗口)
  {
    "key": "alt+7",
    "command": "outline.focus"
  },
  // 重命名文件
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // 刷新文件树
  {
    "key": "shift+r",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+w",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+x",
    "command": "workbench.files.action.collapseExplorerFolders",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // jk 在文件树中进行上下移动
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  // 用ctrl + l 在文件树和代码移动
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  /*
  ===
  === 补全 (cmp)
  ===
  */
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  /*
  ===
  === markdown
  ===
  */
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+i",
    "command": "-md-shortcut.toggleItalic",
    "when": "editorTextFocus && markdownShortcuts:enabled"
  },
  {
    "key": "shift+enter",
    "command": "-markdown-preview-enhanced.runCodeChunk",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "markdown.extension.editing.toggleCodeBlock",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+1",
    "command": "md-shortcut.toggleTitleH1",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+2",
    "command": "md-shortcut.toggleTitleH2",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+3",
    "command": "md-shortcut.toggleTitleH3",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+4",
    "command": "md-shortcut.toggleTitleH4",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+5",
    "command": "md-shortcut.toggleTitleH5",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+6",
    "command": "md-shortcut.toggleTitleH6",
    "when": "editorLangId == 'markdown'"
  },
  /*
  ===
  === 终端 
  ===
  */
  // use pageup pagedown to scroll terminal
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  // remove defalut keybinding ctrl+up/down
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  // use ctrl+up/down/left/right to control terminal winodow size
  {
    "key": "ctrl+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // windows 快捷键冲突 移除 ctrl+left/right
  {
    "key": "ctrl+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // 在终端内使用 ctrl + k 回到代码区
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  // 使用ctrl + enter 让terminal 变成最大(toggle)
  {
    "key": "ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  // 使用ctrl + w 关闭终端
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // 使用alt+h/l进行左右移动在终端组
  {
    "key": "alt+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 使用ctrl + l 进行清屏
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  // Use the same shortcut keys as PowerShell to split the screen
  // Vertical split screen (vscode terminal 只有垂直分屏)
  {
    "key": "alt+shift+=",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  // 移除ctrl+f 和我搜索文件有冲突
  {
    "key": "-ctrl+f",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 使用 alt + j/k 上下切换终端窗口(终端之间的移动)
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  /*
  ===
  === 编辑区
  ===
  */
  // 立马回到代码区
  {
    "key": "ctrl+\\",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  /*
  ===
  === 移除vscode自带快捷键冲突
  ===
  */
  // 移除 ctrl + n 生成新文件
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  /*
  ===
  === git
  ===
  */
  // 使用 ctrl + g 立马跳转到 vscode git视图
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  /*
  ===
  === 侧面板 
  ===
  */
  // 实现侧边栏导航
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "vim.mode != 'normal'&&!inputFocus"
  },
  // 防止ctrl + j 乱走
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  /*
  ===
  === Markdown All in One
  ===
  */
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !inlineSuggestionVisible && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+tab",
    "command": "-markdown.extension.onShiftTabKey",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+enter",
    "command": "markdown.extension.checkTaskList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown' && vim.mode =='Visual'"
  },
  {
    "key": "ctrl+i",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown' && vim.mode =='Visual'"
  },
  {
    "key": "ctrl+alt+v",
    "command": "extension.pasteImage",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+s",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus"
  },
  /*
  ===
  === 编辑区(Editor)
  ===
  */
  // 使用 ctrl + alt + i 会显示这个节点的信息 类似neovim （tressiter highlight under cursor）
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.inspectTMScopes"
  },
  // 移除ctrl + e 搜索文件用ctrl + f 来进行文件之间跳转
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.quickOpen"
  }
]
