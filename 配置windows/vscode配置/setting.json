{
  "workbench.iconTheme": "material-icon-theme",
  "vsicons.dontShowNewVersionMessage": true,
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ editor setting ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "bookmarks.navigateThroughAllFiles": true,
  "bookmarks.saveBookmarksInProject": true,
  "bookmarks.sideBar.expanded": true,
  "bookmarks.useWorkaroundForFormatters": true,
  "workbench.tree.renderIndentGuides": "always",
  "search.searchOnType": true,
  "search.showLineNumbers": true,
  "search.smartCase": true,
  // like cmp ghost text(My favorite feature)
  "editor.suggest.preview": true,
  "workbench.editor.limit.enabled": false,
  "workbench.editor.limit.value": 5,
  "explorer.confirmDragAndDrop": false,
  "editor.showFoldingControls": "always",
  "editor.bracketPairColorization.enabled": true,
  "editor.suggestSelection": "first",
  "editor.fontSize": 16,
  "debug.console.fontSize": 18,
  "editor.cursorSurroundingLines": 8,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.linkedEditing": true,
  "editor.fontFamily": "JetBrains Mono,Cascadia Code,FiraCode Nerd Font,Menlo, Monaco, 'Courier New', monospace,'Hack Nerd Font'",
  // "editor.fontFamily": "Operator Mono",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "editor.tabSize": 2, // minimap
  "editor.cursorSmoothCaretAnimation": true,
  "editor.formatOnSave": true,
  "editor.unicodeHighlight.nonBasicASCII": false,
  "editor.inlineSuggest.enabled": true,
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  "emmet.triggerExpansionOnTab": true,
  "errorLens.enabledDiagnosticLevels": ["warning", "info", "hint", "error"],
  // UI Customizations
  "editor.fontLigatures": true, // 这个控制是否启用字体连字
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "italic font",
        "scope": [
          "comment",
          "keyword",
          "storage",
          "keyword.control.import",
          "keyword.control.default",
          "keyword.control.from",
          "keyword.operator.new",
          "keyword.control.export",
          "keyword.control.flow",
          "storage.type.class",
          "storage.type.function",
          "storage.type",
          "storage.type.class",
          "variable.language",
          "variable.language.super",
          "variable.language.this",
          "meta.class",
          "meta.var.expr",
          "constant.language.null",
          "support.type.primitive",
          "entity.name.method.js",
          "entity.other.attribute-name",
          "punctuation.definition.comment",
          "text.html.basic entity.other.attribute-name.html",
          "text.html.basic entity.other.attribute-name",
          "tag.decorator.js entity.name.tag.js",
          "tag.decorator.js punctuation.definition.tag.js",
          "source.js constant.other.object.key.js string.unquoted.label.js"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      }
    ]
  },
  "monokaiPro.fileIconsMonochrome": false,
  "workbench.colorCustomizations": {
    // "tab.hoverBackground": "#027bcc",
    "[Monokai Pro]": {
      "editor.background": "#1e2122",
      "sideBar.background": "#252526",
      "editorGutter.background": "#1e2122",
      "panel.background": "#1e1e1e",
      "terminal.background": "#1e1e1e", // #221f22
      "editorLineNumber.foreground": "#5b595c",
      "editorLineNumber.activeForeground": "#ffff50",
      // default status
      // "statusBar.background": "#007acc",
      // "statusBar.foreground": "#efffff",
      // monokai charcoral orange
      "statusBar.background": "#000000",
      "statusBar.foreground": "#FD971F",
      "statusBar.border": "#FD971F75",
      "statusBar.noFolderBackground": "#000000",
      "statusBar.noFolderForeground": "#FD971F",
      "statusBar.debuggingBackground": "#43B9D815",
      "statusBar.debuggingForeground": "#FD971F",
      "statusBarItem.hoverBackground": "#101010",
      "editor.selectionBackground": "#2e8a87",
      "editor.findMatchHighlightBackground": "#5b595c"
    },
    "[monokai-charcoal]": {
      "editorLineNumber.foreground": "#2d2a2e",
      "editorLineNumber.activeForeground": "#ffff50",
      "tab.activeBorder": "#ffd866",
      "tab.activeBackground": "#363337",
      // vim搜索文本高亮
      "editor.findMatchHighlightBackground": "#3069db" // #442726 #7306f0 #6688cc
      // "editor.background": "#2d2a2e"
    },
    "[One Dark Pro]": {
      "tab.activeBackground": "#1e2122",
      "tab.activeForeground": "#43B9D8",
      "tab.border": "#181a1f",
      "tab.activeBorder": "#43B9D8",
      "tab.unfocusedActiveBorder": "#919288",
      "tab.inactiveBackground": "#1e2227",
      "tab.inactiveForeground": "#ffffff",
      "tab.unfocusedActiveForeground": "#c0c1b5",
      "tab.unfocusedInactiveForeground": "#919288",
      "tab.hoverBackground": "#323842",
      "tab.unfocusedHoverBackground": "#323842",
      "tab.hoverBorder": "#57584f",
      "tab.unfocusedHoverBorder": "#272822",
      "tab.activeModifiedBorder": "#57584f",
      "tab.inactiveModifiedBorder": "#57584f",
      "tab.unfocusedActiveModifiedBorder": "#3b3c35",
      "tab.unfocusedInactiveModifiedBorder": "#3b3c35",
      "tab.lastPinnedBorder": "#57584f"
    }
  },
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ end editor ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/

  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ vim config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "vim.incsearch": true,
  "vim.autoSwitchInputMethod.enable": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "vim.hlsearch": true,
  "vim.easymotion": true,
  "vim.camelCaseMotion.enable": true,
  "vim.showcmd": true,
  // "vim.shell": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
  "vim.timeout": 500,
  "vim.showmodename": true,
  "vim.leader": "\\",
  "editor.lineNumbers": "relative",
  "vim.smartRelativeLine": false,
  "vim.autoSwitchInputMethod.defaultIM": "1033",
  "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\im\\im-select.exe",
  "vim.autoSwitchInputMethod.switchIMCmd": "D:\\im\\im-select.exe {im}",
  "vim.history": 1000,
  "vim.showMarksInGutter": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "rgba(250, 240, 170, 0.5)",
  "vim.useSystemClipboard": false,
  "vim.wrapscan": true,
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": ["ctrl+e"],
      "commands": ["cursorEnd"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<Space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["ctrl+r"],
      "commands": ["redo"]
    },
    {
      "before": ["ctrl+n"],
      "after": ["g", "b"]
    },
    {
      "before": ["ctrl+j"],
      "commands": ["editor.action.joinLines"],
      "when": [" editorTextFocus && !editorReadonly "]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    }
  ],
  // vim normalKeybinding
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<Space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": ["g", "a"],
      "commands": ["editor.action.quickFix"],
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToImplementation"],
      "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
      "before": ["g", "l"],
      "commands": ["editor.action.marker.nextInFiles"],
      "when": ["editorFocus"]
    },
    {
      "before": ["g", "p"],
      "commands": ["editor.action.peekDefinition"],
      "when": [
        "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      ]
    },
    {
      "before": ["ctrl+e"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prevInFiles"],
      "when": "editorFocus"
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.nextInFiles"],
      "when": "editorFocus"
    },
    {
      "before": ["[", "g"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["]", "g"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["ctrl+r"],
      "commands": ["redo"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["c", "i", "l"],
      "after": ["^", "C"]
    },
    {
      "before": ["d", "i", "l"],
      "after": ["^", "D"]
    },
    {
      "before": ["X"],
      "commands": [":q!"]
    },
    {
      "before": ["<TAB>"],
      "commands": [":bnext"]
    },
    {
      "before": ["<S-TAB>"],
      "commands": [":bprevious"]
    },
    {
      "before": [">"],
      "after": [">", ">"]
    },
    {
      "before": ["<"],
      "after": ["<", "<"]
    },
    {
      "before": ["ctrl+n"],
      "after": ["g", "b"]
    },
    // easymotion setting
    {
      "before": ["s", "s"],
      "after": ["<leader>", "<leader>", "2", "s"]
    },
    {
      "before": ["Y"],
      "after": ["y", "$"]
    },
    {
      "before": ["s", "w"],
      "after": ["<leader>", "<leader>", "<leader>", "b", "d", "w"]
    },
    {
      "before": ["E"],
      "after": ["leader", "leader", "s"]
    },
    {
      "before": ["s", "l"],
      "after": ["leader", "leader", "leader", "b", "d", "j", "k"]
    },
    // end easymotion setting

    // CamelCaseMotion setting
    {
      "before": ["[", "w"],
      "after": ["leader", "w"]
    },
    {
      "before": ["]", "w"],
      "after": ["leader", "e"]
    },
    {
      "before": ["[", "e"],
      "after": ["leader", "b"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["s", "v"],
      "commands": [":vsplit"]
    },
    {
      "before": ["s", "g"],
      "commands": [":split"]
    },
    {
      "before": ["s", "c"],
      "commands": ["workbench.action.closeEditorsInGroup"]
    },
    {
      "before": ["ctrl+k"],
      "commands": ["workbench.action.navigateUp"]
    },
    {
      "before": ["ctrl+j"],
      "commands": ["workbench.action.navigateDown"]
    },
    {
      "before": ["ctrl+h"],
      "commands": ["workbench.action.navigateLeft"]
    },
    {
      "before": ["ctrl+l"],
      "commands": ["workbench.action.navigateRight"]
    }
  ],
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ end vim ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  // 添加忽略文件
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    // 添加希望被忽略的文件,这样一些文件虽然存在于当前工作目录下,但是不会被显示在左侧的文件浏览器里
    // dSYM文件具有调试信息,普通使用的话不看到它就可以了
    "**/*.dSYM": true,
    "**/*.out": true,
    "**/.factorypath": true
  },
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ runner config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "code-runner.executorMap": {
    "go": "go run",
    "javascript": "node",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "python": "python3",
    "php": "php",
    "bat": "cmd /c",
    "shellscript": "bash",
    "typescript": "ts-node",
    "scala": "scala",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "scheme": "csi -script",
    "ahk": "autohotkey",
    "cpp": "g++ $fullFileName -o $dir\"$fileNameWithoutExt\"\".out\" -W -Wall -O2 -std=c++17 && $dir\"$fileNameWithoutExt\"\".out\"",
    "c": "gcc $fullFileName -o $dir\"$fileNameWithoutExt\"\".out\" -W -Wall -O2 -std=c17 && $dir\"$fileNameWithoutExt\"\".out\""
  },
  // custom run command to use lazygit
  "code-runner.customCommand": "lazygit",
  "code-runner.fileDirectoryAsCwd": false, //true设置为 true后，终端默认目录为运行文件的目录。
  "code-runner.saveFileBeforeRun": true, // run code前保存
  "code-runner.runInTerminal": true, // 设置成false会在"OUTPUT"中只读输出，无法输入数据
  "code-runner.preserveFocus": false, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
  "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息，默认false
  "code-runner.ignoreSelection": false,
  "code-runner.showExecutionMessage": true,
  "code-runner.showRunIconInEditorTitleMenu": false,
  "code-runner.showRunCommandInEditorContextMenu": false,
  "code-runner.showRunCommandInExplorerContextMenu": false,
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ end runner ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/

  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ git config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  // 同步我的vscode配置
  "sync.gist": "f25cf7986ba54b02527ad8ff2ddc413b",
  // 指定应抑制哪些消息
  "gitlens.advanced.messages": {
    "suppressGitMissingWarning": true
  },
  "GitCommitPlugin.ShowEmoji": true,
  "GitCommitPlugin.MaxSubjectWords": 20,
  "GitCommitPlugin.CustomCommitType": [
    // If there are duplicate keys, rewrite the config，otherwise add As a new configuration addition
    {
      "key": "fix",
      "label": "fix",
      "detail": "修复bug",
      "icon": "🐛"
    },
    {
      "key": "style",
      "label": "style",
      "detail": "仅仅修改了空格、格式缩进、逗号等等、不改变代码逻辑",
      "icon": "🎨"
    },
    {
      "key": "perf",
      "label": "perf",
      "detail": "优化相关，比如提升性能、体验",
      "icon": "⚡️"
    },
    {
      "key": "docs",
      "label": "docs",
      "detail": "添加或更新文档",
      "icon": "📝"
    },
    {
      "key": "ci",
      "label": "ci",
      "detail": "更改我们的CI配置文件和脚本(示例范围:Travis, Circle, BrowserStack, SauceLabs)",
      "icon": "👷"
    },
    {
      "key": "refactor",
      "label": "refactor",
      "detail": "",
      "icon": "♻️"
    },
    {
      "key": "git ",
      "label": "git",
      "detail": "添加或更新 .gitignore file.",
      "icon": "🙈"
    },
    {
      "key": "patch",
      "label": "patch",
      "detail": "关键的热修复补丁",
      "icon": "🚑️"
    },
    {
      "key": "test",
      "label": "test",
      "detail": "添加、更新或通过测试",
      "icon": "✅"
    }
  ],
  "GitCommitPlugin.Templates": [
    {
      "templateName": "git-cz",
      "templateContent": "<type>(<scope>):<space><icon><space><subject><enter><body><enter><footer>",
      // Set as default commit template
      "default": true
    }
  ],
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
    --━━━━━━━━━━━━━━━━━━━❰ end git ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/

  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ markdown config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "markdown.preview.fontSize": 16,
  "markdown-preview-enhanced.previewTheme": "github-dark.css",
  "markdown-preview-enhanced.enableHTML5Embed": true,
  "markdown-preview-enhanced.enableExtendedTableSyntax": true,
  "markdown.extension.toc.updateOnSave": true,
  "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
  "markdown.extension.print.absoluteImgPath": false,
  "pasteImage.path": "${projectRoot}/img",
  "pasteImage.basePath": "${currentFileDir}",
  // "pasteImage.prefix": "/",
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
    --━━━━━━━━━━━━━━━━━━━❰ end markdown ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/

  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ terminal config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  // windows
  // "terminal.external.windowsExec": "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\PowerShell\\PowerShell 7 (x64)",
  "terminal.external.windowsExec": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
  // gpu acceleration
  "terminal.integrated.gpuAcceleration": "on",
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
    --━━━━━━━━━━━━━━━━━━━❰ end terminal ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "liveServer.settings.donotShowInfoMsg": true,
  // explorer
  "explorer.confirmDelete": false,
  // 控制如何处理在受信任的工作区中打开不受信任的文件
  "security.workspace.trust.untrustedFiles": "open",
  "whichkey.bindings": [
    /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
    --━━━━━━━━━━━━━━━━━━━❰ whichkeyconfig ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    // {
    //   "key": "?",
    //   "name": "View All References",
    //   "type": "command",
    //   "command": "references-view.find",
    //   "when": "editorHasReferenceProvider"
    // },
    {
      "key": "?",
      "name": "Search keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": "/",
      "name": "Search in project",
      "type": "command",
      "command": "workbench.action.findInFiles"
    },
    {
      "key": "*",
      "name": "Search in project with selection",
      "type": "command",
      "command": "workbench.action.findInFiles search.action.focusSearchList"
    },
    //whichkey-b
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "f",
          "name": "Find buffers",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "o",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    //whichkey-d
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    //whichkey-e
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    //whichkey-r
    {
      "key": "r",
      "name": "Run/Rename",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "Run code",
          "type": "command",
          "command": "code-runner.run"
        },
        {
          "key": "n",
          "name": "Rename",
          "type": "command",
          "command": "fileutils.renameFile"
        }
      ]
    },
    //whichkey-n
    {
      "key": "n",
      "name": "New",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "New file",
          "type": "command",
          "command": "fileutils.newFile"
        }
        // {
        //   "key": "d",
        //   "name": "Delete file",
        //   "type": "command",
        //   "command": "fileutils.removeFile"
        // },
      ]
    },
    //whichkey-f
    {
      "key": "f",
      "name": "File...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "c",
          "name": "Colorscheme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "fileutils.newFolder"
        }
      ]
    },
    //whichkey-g
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "y",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "A",
          "name": "Stage All",
          "type": "command",
          "command": "git.stageAll"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "g",
          "name": "Lazygit",
          "type": "command",
          "command": "code-runner.runCustomCommand"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        // {
        //   "key": "c",
        //   "name": "Commit",
        //   "type": "command",
        //   "command": "git.commit"
        // },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "extension.showGitCommit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        // {
        //   "key": "g",
        //   "name": "Graph",
        //   "type": "command",
        //   "command": "git-graph.view"
        // },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "o",
          "name": "Open Repository",
          "type": "command",
          "command": "git.openRepository"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    //whichkey-i
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        },
        {
          "key": "m",
          "name": "Insert image (Markdown)",
          "type": "command",
          "command": "extension.pasteImage",
          "when": "editorLangId == 'markdown'"
        }
      ]
    },
    //whichkey-j
    {
      "key": "j",
      "name": "+Jump/Join/Split",
      "type": "bindings",
      "bindings": [
        {
          "key": "=",
          "name": "Format region or buffer",
          "type": "command",
          "command": "editor.action.format"
        },
        {
          "key": "c",
          "name": "Jump to previous change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "i",
          "name": "Jump to symbol in buffer",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "C",
          "name": "Jump to next change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        }
      ]
    },
    //whichkey-l
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "r",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "j",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "J",
          "name": "Next Problem (Pro)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "k",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "K",
          "name": "Prev Problem (Pro)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    //whichkey-m
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "C",
          "name": "Clear All Bookmarks",
          "type": "command",
          "command": "bookmarks.clearFromAllFiles"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        },
        {
          "key": "p",
          "name": "Markdown Preview",
          "type": "command",
          "command": "markdown-preview-enhanced.openPreviewToTheSide",
          "when": "editorLangId == 'markdown'"
        },
        {
          "key": "a",
          "name": "Add/Update section numbers",
          "command": "markdown.extension.toc.addSecNumbers",
          "when": "editorLangId == 'markdown'"
        },
        {
          "key": "d",
          "name": "Delete section numbers",
          "command": "markdown.extension.toc.removeSecNumbers",
          "when": "editorLangId == 'markdown'"
        },
        {
          "key": "b",
          "name": "Create toc",
          "command": "markdown.extension.toc.create",
          "when": "editorLangId == 'markdown'"
        }
      ]
    },
    //whichkey-M
    {
      "key": "M",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    //whichkey-o
    {
      "key": "o",
      "name": "Outline Float Window",
      "type": "command",
      "command": "breadcrumbs.focusAndSelect"
    },
    //whichkey-O
    {
      "key": "O",
      "name": "OutlineToggle",
      "type": "command",
      "command": "workbench.action.toggleAuxiliaryBar"
    },
    //whichkey-P
    {
      "key": "P",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    //whichkey-s
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Jump to line",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": ["leader", "leader", "/"]
          }
        },
        {
          "key": "b",
          "name": "Fuzzy search in current buffer",
          "type": "command",
          "command": "fuzzySearch.activeTextEditorWithCurrentSelection"
        },
        {
          "key": "c",
          "name": "Clear Highlight",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "commands": [
              {
                "command": ":noh"
              }
            ]
          }
        }
      ]
    },
    //whichkey-S
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    //whichkey-t
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "T",
          "name": "Focus Terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus"
        }
      ]
    },
    //whichkey-u
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    //whichkey-w
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "w",
          "name": "Focus next editor group",
          "type": "command",
          "command": "workbench.action.focusNextGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.navigateLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.navigateDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.navigateUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.navigateRight"
        },
        {
          "key": "H",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "J",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "K",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "L",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Toggle Maximize windows",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        },
        {
          "key": "s",
          "name": "Split Horizontal",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "v",
          "name": "Split Vertical",
          "type": "command",
          "command": "workbench.action.splitEditor"
        }
      ]
    },
    //whichkey-x
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    // whichkey-y
    {
      "key": "y",
      "name": "Copy",
      "type": "command",
      "command": "vim.remap",
      "args": {
        "after": ["\"", "+", "y"]
      }
    },
    //whichkey-p
    {
      "key": "p",
      "name": "Paste",
      "type": "command",
      "command": "vim.remap",
      "args": {
        "after": ["\"", "+", "p"]
      }
    },
    //whichkey-z
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ end whichkey ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/

  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━❰ language config ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.minimap.enabled": false,
  "workbench.experimental.editor.dragAndDropIntoEditor.enabled": true,
  "cSpell.userWords": ["dotfile", "gitmoji", "unstage", "Unstaged"],
  "pasteImage.forceUnixStyleSeparator": false,
  "python.defaultInterpreterPath": "C:\\Users\\9\\scoop\\shims\\python3.exe",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.activityBar.visible": false
  /*--━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--
    --━━━━━━━━━━━━━━━━━━━❰ end language ❱━━━━━━━━━━━━━━━━━━━--
  --━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━--*/
}
