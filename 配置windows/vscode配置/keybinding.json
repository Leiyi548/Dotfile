[
  // space 呼出 whichkey
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  /*
  ===
  === 文件树操作
  ===
  */
  // 打开左侧文件树
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  // 光标到 outline
  {
    "key": "ctrl+;",
    "command": "outline.focus",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  // 重命名文件
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // 刷新文件树
  {
    "key": "shift+r",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // jk 在文件树中进行上下移动
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  // 用ctrl + l 在文件树和代码移动
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  /*
  ===
  === 补全 (cmp)
  ===
  */
  // remove tab to accept copilot suggestions
  // use ctrl + ] to accept copilot suggestions
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  // remove ctrl + y open completition window
  // {
  //   "key": "ctrl+y",
  //   "command": "editor.action.triggerSuggest",
  //   "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && vim.mode=='Insert'"
  // },
  // {
  //   "key": "ctrl+space",
  //   "command": "-editor.action.triggerSuggest",
  //   "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  // },
  // 用Ctrl+n tab 进行向下选择  用Ctrl+p shift+tab 进行向上选择
  {
    "key": "ctrl+[",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  /*
  ===
  === markdown
  ===
  */
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "-markdown-preview-enhanced.runCodeChunk",
    "when": "editorLangId == 'markdown'"
  },
  /*
  ===
  === window 
  ===
  */
  /*
  ===
  === 终端 
  ===
  使用细节(windows)
  1. ctrl+l 清屏
  */
  // remove default ctrl+up/down keybindings
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  // use ctrl+up/down to control winodow size
  {
    "key": "ctrl+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // windows 快捷键冲突 移除 ctrl+left/right
  {
    "key": "ctrl+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // 使用 pageup / pagedwon 上下移动终端页面
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus"
  },
  // 使用 ctrl + t 去 toggle 终端
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // 移除原来的键位绑定
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // 在终端内使用 ctrl + k 回到代码区
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  // 使用ctrl + enter 让terminal 变成最大
  {
    "key": "ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  // 使用ctrl + d 关闭终端
  {
    "key": "ctrl+d",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // Use the same shortcut keys as PowerShell to split the screen
  // Vertical split screen (vscode terminal 只有垂直分屏)
  {
    "key": "alt+shift+=",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  /*
  ===
  === 编辑区
  ===
  */
  // 立马回到代码区
  {
    "key": "ctrl+\\",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  /*
  ===
  === 移除vscode自带快捷键冲突
  ===
  */
  // 移除 ctrl + n 生成新文件
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  /*
  ===
  === git
  ===
  */
  // 使用 ctrl + g 立马跳转到 vscode git视图
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  // 运行 lazygit
  // {
  //   "key": "alt+g",
  //   "command": "workbench.action.tasks.runTask",
  //   "args": "lazygit"
  // },
  /*
  ===
  === 侧面板 
  ===
  */
  // 实现侧边栏导航
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "vim.mode != 'normal'&&!inputFocus"
  },
  // 防止ctrl + j 乱走
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  /*
  ===
  === Markdown All in One
  ===
  */
  {
    "key": "shift+tab",
    "command": "-markdown.extension.onShiftTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+enter",
    "command": "markdown.extension.checkTaskList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown' || vim.mode =='Visual'"
  },
  {
    "key": "ctrl+i",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown' || vim.mode =='Visual'"
  },
  {
    "key": "ctrl+c",
    "command": "markdown.extension.toc.create"
  },
  {
    "key": "ctrl+alt+v",
    "command": "extension.pasteImage",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+s",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // remove ctrl + . to codeaction
  {
    "key": "ctrl+oem_period",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  }
]
