" ███╗   ██╗ ███████╗ ██████╗  ██╗   ██╗ ██╗ ███╗   ███╗
" ████╗  ██║ ██╔════╝██╔═══██╗ ██║   ██║ ██║ ████╗ ████║
" ██╔██╗ ██║ █████╗  ██║   ██║ ██║   ██║ ██║ ██╔████╔██║
" ██║╚██╗██║ ██╔══╝  ██║   ██║ ╚██╗ ██╔╝ ██║ ██║╚██╔╝██║
" ██║ ╚████║ ███████╗╚██████╔╝  ╚████╔╝  ██║ ██║ ╚═╝ ██║
" ╚═╝  ╚═══╝ ╚══════╝ ╚═════╝    ╚═══╝   ╚═╝ ╚═╝     ╚═╝
"""""""""""""""""""""""""""""""""""""""""""""""""""""
" ###### 7.2 替换
"           :s/old/new - 用new替换当前行第一个old。
"           :s/old/new/g - 用new替换当前行所有的old。
"           :n1,n2s/old/new/g - 用new替换文件n1行到n2行所有的old。
"           :%s/old/new/g - 用new替换文件中所有的old。
"           :%s/^/xxx/g - 在每一行的行首插入xxx，^表示行首。
"           :%s/$/xxx/g - 在每一行的行尾插入xxx，$表示行尾。
"           有替换命令末尾加上c，每个替换都将需要用户确认。 如：%s/old/new/gc，加上i则忽略大小写(ignore)。
"           有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，
"           法为 :[range]g/pattern/command
"           如 :%g/^ xyz/normal dd。
"           示对于以一个空格和xyz开头的行执行normal模式下的dd命令。
"           于range的规定为：
"           果不指定range，则表示当前行。
"           ,n: 从m行到n行。
"           : 最开始一行（可能是这样）。
"           $: 最后一行
"           .: 当前行
"           %: 所有行
" 全局替换 vim全局替换命令
       "语法为 :[addr]s/字符串/目的字符串/[option]
       "全局替换命令为：:%s/源字符串/目的字符串/g
" 以上是一些vim使用方法 -----------------


"""""""""""""""""""""""""General setting""""""""""""""""""
" 设置leader键"
let mapleader=" "
set timeoutlen=500
nnoremap <SPACE> <nop>
"相对数字
set realtive number
" 屏幕滚动时在光标上下方保留5行预览代码
set so=5
nnoremap <leader>sc :nohlsearch<Cr>
" 设置寻找高亮
set hlsearch
exec "nohlsearch"
set incsearch
"从不备份
set nobackup
"设置字不超过窗口
set wrap
"不要使用vi的键盘模式，而是vim自己的
set nocompatible
"设置水平显示
set cursorline
set cuc
" 设置tab键和自动缩进
set tabstop=4
set shiftwidth=4
set softtabstop=4
"下一行和上一行的格式相同
set autoindent
set cindent
"设置窗口分隔
set splitright
set splitbelow
"突出显示光标
"不区分大小写
set ignorecase
"
set showmode
"Plug
set NERDTree
set surround
set multiaple-cursors
set commentary "能用gcc gc+motion来注释代码
set keep-english-in-normal-and-restore-in-insert  "普通模式强制以英文模式
set easymotion
set argtextobj
"set whichkey
"""""""""""""""""""""""'''''''''''''''''''''''''
nnoremap s <Nop>
nnoremap q <Nop>
vnoremap v <Esc>
"快速切换buffers
nnoremap <TAB> gt
nnoremap <S-TAB> gT

"""""""""""""""""""""""""Plugins Setting""""""""""""""""""""""
"NERDTree
nnoremap <leader>e :NERDTree<CR> "打开文件树
nnoremap Q :NERDTreeClose<CR> "关闭文件树

"multiple-cursors
" Remap multiple-cursors shortcuts for Mac
nmap <C-n> <Plug>NextWholeOccurrence  "ctrl n 选择下一块
xmap <C-n> <Plug>NextWholeOccurrence 
nmap <C-x> <Plug>SkipOccurrence  "ctrl x 跳过这一块
xmap <C-x> <Plug>SkipOccurrence
nmap <C-p> <Plug>RemoveOccurrence  " ctrl p 移除这个选择
xmap <C-p> <Plug>RemoveOccurrence
nmap <S-C-n> <Plug>AllWholeOccurrences "ctrl shift n 选择所有块
xmap <S-C-n> <Plug>AllWholeOccurrences

" easymotion
map ss <Plug>(easymotion-s2)

""""""""""""""""""""""""Debug""""""""""""""""""""""""""""""""
"启动Debug
 <leader>dl :action Debug<CR>
"打上断点或取消断点
nnoremap <leader>db :action ToggleLineBreakpoint<CR>
"取消所有的断点
nnoremap <leader>dB :action Debugger.RemoveAllBreakpointsInFile<CR>

""""""""""""""""""""""""Run""""""""""""""""""""""""""""""""
"运行代码
"设置运行配置
nnoremap <Space>rc :action RunConfiguration<CR>
"运行上次运行的类
noremap <Space>rr :action Run<CR>
"运行当前(now)类
noremap <Space>rc :action RunClass<CR>
"""""""""""""""""""""""""Window operation""""""""""""""""""
nnoremap <leader>wd <C-W>c
nnoremap <leader>wj <C-W>j
nnoremap <leader>wk <C-W>k
nnoremap <leader>wh <C-W>h
nnoremap <leader>wl <C-W>l
nnoremap <leader>ws <C-W>s
nnoremap <leader>wv <C-W>v

"""""""""""""""""""""""""Setting""""""""""""""""""""""
" edit vimrc
nnoremap <leader>fvd :e ~/.ideavimrc<CR>
nnoremap <leader>fvs :source ~/.ideavimrc<CR>
" save and close
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>

" copy and paste
noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>P "0p
vnoremap Y y$
nnoremap Y y$
"""""""""""""""""""""""""""Operation"""""""""""""""""""""''
""""""""Movej""""""
" nnoremap J 5j
" nnoremap K 5k
" vnoremap J 5j
" vnoremap K 5k
" Insert mode shortcut
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-d> <Delete>
"move quickly
nnoremap H ^
nnoremap L $
vnoremap H ^
vnoremap L $

nnoremap > >>
nnoremap < <<

"后退功能
"nnoremap <leader>gb :action Back<CR>
nnoremap <leader>gb :action JumpToLastChange<CR>

"""""""""""""""""加强操作"""""""""""""""""""""
"move Error
 "跳转上一个错误
nnoremap [l :action GotoPreviousError<CR>
"跳转下一个错误
nnoremap ]l :action GotoNextError<CR>
"查找用法
nnoremap <Leader>fu :action FindUsages<CR>
"跳转到Action
nnoremap <Leader>ga :action GotoAction<CR>
"跳转SuperMethod
nnoremap <leader>gs :action GotoSuperMethod<CR>
"跳转到实体类
nnoremap <Leader>gc :action GotoClass<CR>
"跳转到文件
nnoremap <Leader>gf :action GotoFile<CR>
"跳转到声明
nnoremap gd :action GotoDeclaration<CR>
"跳转到实现类
nnoremap gi :action GotoImplementation<CR>
"""""""commentary""""""
"nnoremap  gcc :action CommentByLineComment<CR>
"vnoremap  gc :action CommentByLineComment<CR>
"""""""format""""""""""
"格式化代码
nnoremap == :action ReformatCode<CR>



" navigation
"nnoremap gs :action GotoSuperMethod<CR>
"nnoremap gi :action GotoImplementation<CR>
"nnoremap gd :action GotoDeclaration<CR>
"nnoremap gf :action FileStructurePopup<CR>
