[
  {
    "key": "space",
    "command": "whichkey.show",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  /*
  ===
  === 文件树操作
  ===
  */
  // 打开左侧文件树
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "vim.mode != 'Insert'&&!inputFocus"
  },
  {
    "key": "ctrl+;",
    "command": "outline.focus"
  },
  // 重命名文件
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // 刷新资源管理器
  {
    "key": "shift+r",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // jk 在文件树中进行上下移动
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "l",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "list.collapse",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "q",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+cmd+backspace",
    "command": "-deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !"
  },
  {
    "key": "ctrl+l",
    "when": "sideBarFocus",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  /*
  ===
  === 补全 (cmp)
  ===
  */
  // remove tab to accept copilot suggestions
  // use ctrl + ] to accept copilot suggestions
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  // remove ctrl + y open completition window
  // {
  //   "key": "ctrl+y",
  //   "command": "editor.action.triggerSuggest",
  //   "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && vim.mode=='Insert'"
  // },
  // {
  //   "key": "ctrl+space",
  //   "command": "-editor.action.triggerSuggest",
  //   "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  // },
  // 用Ctrl+n tab 进行向下选择  用Ctrl+p shift+tab 进行向上选择
  {
    "key": "ctrl+[",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  /*
  ===
  === markdown
  ===
  */
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "alt+shift+enter",
    "command": "markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "-markdown-preview-enhanced.runCodeChunk",
    "when": "editorLangId == 'markdown'"
  },
  /*
  ===
  === window 
  ===
  */
  // 移动标签位置
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  /*
  ===
  === 终端 
  ===
  */
  /*
  使用细节
   1.可以使用ctrl + cmd + 方向左右键来控制终端位置
   2.可以用cmd+k 快速清屏
  */
  {
    "key": "ctrl+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  /*
  ===
  === 编辑区
  ===
  */
  // 立马回到代码区
  {
    "key": "ctrl+\\",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  /*
  ===
  === 窗口移动 
  ===
  */
  // {
  //   "key": "ctrl+h",
  //   "command": "workbench.action.navigateLeft",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
  // },
  // {
  //   "key": "q",
  //   "command": "workbench.action.closePanel",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  /*
  ===
  === 移除vscode自带快捷键冲突
  ===
  */
  // remove conflict with vim keybinding
  {
    "key": "ctrl+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  /*
  ===
  === git
  ===
  */
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && vim.mode != 'Insert'&&!inputFocus"
  }
]
